name: Create and publish a Docker image

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  output-demo:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - run: echo ${{needs.build-and-push-image.outputs.tags}}

  integration-tests:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    services:
      web:
        image: ${{needs.build-and-push-image.outputs.tags}}
        ports:
          - 8080:80

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Run Tests
        run: mvn clean verify -DskipSurefire=true

  build-maven-publish:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    permissions:
      contents: read
      packages: write
    services:
      web:
        image: ${{needs.build-and-push-image.outputs.tags}}
        ports:
          - 8082:80

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Build Maven project
        run: mvn -B package --file pom.xml

      - name: Upload Maven SNAPSHOT
        run: mvn --batch-mode --update-snapshots deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  azure-deploy:
    runs-on: ubuntu-latest
    needs:
      - integration-tests
      - build-and-push-image
      - build-maven-publish
    steps:
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - run: echo ${{needs.build-and-push-image.outputs.tags}}

      - name: "Deploy to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: alm-individuelluppgift
          image: ${{needs.build-and-push-image.outputs.tags}}
          cpu: 1 #Optional
          memory: 1 #Optional
          dns-name-label: alm-individuelluppgift
          name: alm-individuelluppgift
          location: "Sweden Central"